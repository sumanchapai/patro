class NepaliDate{

    /**
     * Starts from 2000 BS
     * Starting reference point : 2000/01/01 BS and 1943/4/14 AD
     */

    static NEPAL_STARTING_YEAR = 2000
    static ENG_STARTING_DATE_OBJECT = new Date(1943, 3, 14);

    static NepaliYearAndMonthDays = [
                    //        2000 BS - 1943/1944 AD 
                    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
                    // 2001 BS
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], 
                    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
                    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
                    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
                    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
                    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
                    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
                    [31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30],
                    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
                    [31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],
                    [31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],
                    [31, 32, 31, 32, 30, 31, 30, 30, 29, 30, 30, 30],
                    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],
                    [30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30],
                    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
                    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],
                    [30, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30],
                    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
                    [31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],
                    [31, 31, 32, 31, 31, 31, 30, 29, 30, 30, 30, 30],
                    [30, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
                    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
                    [31, 31, 32, 31, 31, 31, 29, 30, 29, 30, 29, 31],
                    [31, 31, 32, 31, 31, 31, 30, 29, 29, 30, 30, 30],
            //         2099 BS - 2042/2043 AD
                    ]

    constructor(){
        this.year = NepaliDate.NEPAL_STARTING_YEAR;
        this.month = 0;
        this.date = 0;
        this.diffDays = parseInt((new Date() - NepaliDate.ENG_STARTING_DATE_OBJECT) / (1000 * 60 * 60 * 24), 10);
        
        let currentYearIndex = 0;
        let currentYearTotalDays = NepaliDate.NepaliYearAndMonthDays[currentYearIndex].reduce(function(pv, cv) { return pv + cv; }, 0);
        
        while (this.diffDays >= currentYearTotalDays){
            currentYearIndex++;
            currentYearTotalDays = NepaliDate.NepaliYearAndMonthDays[currentYearIndex].reduce(function(pv, cv) { return pv + cv; }, 0);
            this.diffDays -= currentYearTotalDays;
        }
        this.year = this.year + currentYearIndex;

        let monthDayValues = NepaliDate.NepaliYearAndMonthDays[currentYearIndex];
        let currentMonthIndex = 0;

        while (this.diffDays >= monthDayValues[currentMonthIndex]){
            currentMonthIndex++;
            this.diffDays -= monthDayValues[currentMonthIndex]
        }
        this.month = currentMonthIndex;
        this.date = this.diffDays+1;
    }

    getYear() {
        return this.year;
    }

    getDate() {
        return this.date;
    }

    getMonth() {
        return this.month;
    }
}